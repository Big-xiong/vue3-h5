diff --git a/node_modules/vue3-clipboard/dist/vue3-clipboard-es.js b/node_modules/vue3-clipboard/dist/vue3-clipboard-es.js
index f5525c4..3805218 100644
--- a/node_modules/vue3-clipboard/dist/vue3-clipboard-es.js
+++ b/node_modules/vue3-clipboard/dist/vue3-clipboard-es.js
@@ -16,12 +16,12 @@ function _typeof(obj) {
 
 var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
 
-function unwrapExports (x) {
-	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
+function unwrapExports(x) {
+  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
 }
 
 function createCommonjsModule(fn, module) {
-	return module = { exports: {} }, fn(module, module.exports), module.exports;
+  return module = { exports: {} }, fn(module, module.exports), module.exports;
 }
 
 var clipboard_min = createCommonjsModule(function (module, exports) {
@@ -32,24 +32,24 @@ var clipboard_min = createCommonjsModule(function (module, exports) {
    * Licensed MIT Â© Zeno Rocha
    */
   !function (t, e) {
-     module.exports = e() ;
+    module.exports = e();
   }(commonjsGlobal, function () {
     return o = {}, r.m = n = [function (t, e) {
       t.exports = function (t) {
         var e;
-        if ("SELECT" === t.nodeName) t.focus(), e = t.value;else if ("INPUT" === t.nodeName || "TEXTAREA" === t.nodeName) {
+        if ("SELECT" === t.nodeName) t.focus(), e = t.value; else if ("INPUT" === t.nodeName || "TEXTAREA" === t.nodeName) {
           var n = t.hasAttribute("readonly");
           n || t.setAttribute("readonly", ""), t.select(), t.setSelectionRange(0, t.value.length), n || t.removeAttribute("readonly"), e = t.value;
         } else {
           t.hasAttribute("contenteditable") && t.focus();
           var o = window.getSelection(),
-              r = document.createRange();
+            r = document.createRange();
           r.selectNodeContents(t), o.removeAllRanges(), o.addRange(r), e = o.toString();
         }
         return e;
       };
     }, function (t, e) {
-      function n() {}
+      function n() { }
 
       n.prototype = {
         on: function (t, e, n) {
@@ -75,15 +75,15 @@ var clipboard_min = createCommonjsModule(function (module, exports) {
         },
         off: function (t, e) {
           var n = this.e || (this.e = {}),
-              o = n[t],
-              r = [];
+            o = n[t],
+            r = [];
           if (o && e) for (var i = 0, a = o.length; i < a; i++) o[i].fn !== e && o[i].fn._ !== e && r.push(o[i]);
           return r.length ? n[t] = r : delete n[t], this;
         }
       }, t.exports = n, t.exports.TinyEmitter = n;
     }, function (t, e, n) {
       var d = n(3),
-          h = n(4);
+        h = n(4);
 
       t.exports = function (t, e, n) {
         if (!t && !e && !n) throw new Error("Missing required arguments");
@@ -156,12 +156,12 @@ var clipboard_min = createCommonjsModule(function (module, exports) {
 
       n.r(e);
       var o = n(0),
-          r = n.n(o),
-          i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
-        return typeof t;
-      } : function (t) {
-        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
-      };
+        r = n.n(o),
+        i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
+          return typeof t;
+        } : function (t) {
+          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
+        };
 
       function a(t, e) {
         for (var n = 0; n < e.length; n++) {
@@ -193,7 +193,7 @@ var clipboard_min = createCommonjsModule(function (module, exports) {
         key: "selectFake",
         value: function () {
           var t = this,
-              e = "rtl" == document.documentElement.getAttribute("dir");
+            e = "rtl" == document.documentElement.getAttribute("dir");
           this.removeFake(), this.fakeHandlerCallback = function () {
             return t.removeFake();
           }, this.fakeHandler = this.container.addEventListener("click", this.fakeHandlerCallback) || !0, this.fakeElem = document.createElement("textarea"), this.fakeElem.style.fontSize = "12pt", this.fakeElem.style.border = "0", this.fakeElem.style.padding = "0", this.fakeElem.style.margin = "0", this.fakeElem.style.position = "absolute", this.fakeElem.style[e ? "right" : "left"] = "-9999px";
@@ -266,18 +266,18 @@ var clipboard_min = createCommonjsModule(function (module, exports) {
           return this._target;
         }
       }]), c),
-          u = n(1),
-          s = n.n(u),
-          f = n(2),
-          d = n.n(f),
-          h = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
-        return typeof t;
-      } : function (t) {
-        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
-      },
-          p = function (t, e, n) {
-        return e && y(t.prototype, e), n && y(t, n), t;
-      };
+        u = n(1),
+        s = n.n(u),
+        f = n(2),
+        d = n.n(f),
+        h = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
+          return typeof t;
+        } : function (t) {
+          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
+        },
+        p = function (t, e, n) {
+          return e && y(t.prototype, e), n && y(t, n), t;
+        };
 
       function y(t, e) {
         for (var n = 0; n < e.length; n++) {
@@ -348,8 +348,8 @@ var clipboard_min = createCommonjsModule(function (module, exports) {
         key: "isSupported",
         value: function (t) {
           var e = 0 < arguments.length && void 0 !== t ? t : ["copy", "cut"],
-              n = "string" == typeof e ? [e] : e,
-              o = !!document.queryCommandSupported;
+            n = "string" == typeof e ? [e] : e,
+            o = !!document.queryCommandSupported;
           return n.forEach(function (t) {
             o = o && !!document.queryCommandSupported(t);
           }), o;
@@ -451,7 +451,7 @@ function copyText(_text, container, callback) {
   fakeElement.click();
   if (VueClipboardConfig.appendToBody) document.body.removeChild(fakeElement);
 }
-function index (app, vueClipboardConfig) {
+function index(app, vueClipboardConfig) {
   VueClipboardConfig = vueClipboardConfig;
   app.config.globalProperties.$copyText = copyText;
   app.directive('clipboard', {
@@ -502,7 +502,7 @@ function index (app, vueClipboardConfig) {
       } else if (binding.arg === 'error') {
         delete el._vClipboard_error;
       } else {
-        el._vClipboard.destroy();
+        el._vClipboard?.destroy?.();
 
         delete el._vClipboard;
       }
